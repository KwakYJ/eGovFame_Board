<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.board.service.impl.BoardMapper">

	<resultMap id="board" type="egovframework.example.board.service.BoardVO">
		<result property="idx" column="idx"/>
		<result property="title" column="title"/>
		<result property="contents" column="contents"/>	
		<result property="writer" column="writer"/>
		<result property="writerNm" column="writerNm"/>
		<result property="indate" column="indate"/>
		<result property="user_id" column="user_id"/>
		<result property="password" column="password"/>
		<result property="user_name" column="user_name"/>
	</resultMap>

<!-- 로그인 SQL -->

	<!-- 회원가입 -->
	<insert id="insertSignUp" parameterType="BoardVO">

			INSERT INTO TB_USER
				( USER_ID
				  , USER_NAME
				  , PASSWORD )
			VALUES ( #{user_id, jdbcType=VARCHAR}
				  , #{user_name, jdbcType=VARCHAR}
				  , #{password, jdbcType=VARCHAR} )

	</insert>

	<!-- 로그인 정보 체크 -->
	<select id="selectLoginCheck" parameterType="boardVO" resultType="String">

			SELECT USER_NAME
			FROM TB_USER
			WHERE 1=1
			AND USER_ID = #{user_id}
			AND	PASSWORD = #{password}
			
	</select>	

<!-- 게시물 SQL -->

	<!-- 게시물 등록 -->
	<insert id="insertBoard" parameterType="BoardVO">

			INSERT INTO TB_BOARD
				( IDX
				  , TITLE
				  , CONTENTS
				  , COUNT
				  , WRITER
				  , INDATE )
			VALUES ( NULL
				  , #{title, jdbcType=VARCHAR}
				  , #{contents, jdbcType=VARCHAR}
				  , #{count, jdbcType=VARCHAR}
				  , #{writer, jdbcType=VARCHAR}
				  , SYSDATE() )

	</insert>

	<!-- 게시물 수정 -->
	<update id="updateBoard">

			UPDATE TB_BOARD
			SET TITLE=#{title, jdbcType=VARCHAR}
				, CONTENTS=#{contents, jdbcType=VARCHAR}
			WHERE IDX=#{idx}

	</update>

	<!-- 게시물 조회수 -->
	<update id="updateBoardCount">

			UPDATE TB_BOARD
			SET COUNT = IFNULL(COUNT,0)+1
			WHERE IDX=#{idx}

	</update>

	<!-- 게시물 삭제 -->
	<delete id="deleteBoard">

			DELETE FROM TB_BOARD
			WHERE IDX=#{idx}

	</delete>
	
	<!-- 게시물 정보 -->
	<select id="selectBoard" resultMap="board">

			SELECT
				A.IDX as idx
				  , A.TITLE as title
				  , A.CONTENTS as contents
				  , IFNULL(A.COUNT,0) as count
				  , A.WRITER as writer
				  , A.INDATE as indate
				  , B.USER_NAME as writerNm
			FROM TB_BOARD A LEFT JOIN TB_USER B ON A.WRITER = B.USER_ID
			WHERE A.IDX=#{idx, jdbcType=VARCHAR}

	</select>	
	
	<!-- 게시물 목록 -->
	<select id="selectBoardList" parameterType="boardVO" resultType="egovMap">

			SELECT
				A.IDX as idx
				  , A.TITLE as title
				  , A.CONTENTS as contents
				  , IFNULL(A.COUNT,0) as count
				  , A.WRITER as writer
				  , A.INDATE as indate
				  , B.USER_NAME as writerNm
			FROM TB_BOARD A LEFT JOIN TB_USER B ON A.WRITER = B.USER_ID
			WHERE 1=1
			<!-- 제목으로 게시물 검색 -->
			<if test="searchKeyword != null and searchKeyword != ''">
				AND	A.TITLE LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
			ORDER BY IDX DESC
			LIMIT #{firstIndex}, #{recordCountPerPage}
	</select>

	<!-- 게시물 총 개수 -->
	<select id="selectBoardListTotCnt" parameterType="boardVO" resultType="int">

			SELECT COUNT(*) totcnt
			FROM TB_BOARD A
			WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
				AND	A.TITLE LIKE CONCAT('%',#{searchKeyword},'%')
			</if>
	</select>
	
<!-- 댓글 SQL -->

	<!-- 댓글 등록 -->
	<insert id="insertReply" parameterType="BoardVO">

			INSERT INTO TB_REPLY
				( IDX
				  , SEQ
				  , REPLY
				  , WRITER
				  , INDATE )
			VALUES ( #{idx}
				  , (SELECT IFNULL(MAX(X.SEQ)+1,1) FROM TB_REPLY X WHERE X.IDX = #{idx})
				  , #{reply, jdbcType=VARCHAR}
				  , #{writer, jdbcType=VARCHAR}
				  , SYSDATE() )

	</insert>
	
	<!-- 댓글 목록 -->
	<select id="selectReplyList" parameterType="boardVO" resultType="egovMap">

			SELECT
				A.IDX as idx
				  , A.SEQ as seq
				  , A.REPLY as reply
				  , A.WRITER as writer
				  , A.INDATE as indate	
			FROM TB_REPLY A
			WHERE 1=1
			AND	A.IDX = #{idx}
			ORDER BY SEQ ASC
			
	</select>
	
	<!-- 게시물에 달린 댓글 모두 삭제  -->
	<delete id="deleteReply">

			DELETE FROM TB_REPLY
			WHERE IDX=#{idx}

	</delete>
</mapper>